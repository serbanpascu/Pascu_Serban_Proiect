<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pascu_Serban_Proiect"
        xmlns:CakeShopModel="clr-namespace:CakeShopModel;assembly=CakeShopModel" x:Class="Pascu_Serban_Proiect.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type CakeShopModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="productViewSource" d:DesignSource="{d:DesignInstance {x:Type CakeShopModel:Product}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlCakeShop" HorizontalAlignment="Left" Height="419" VerticalAlignment="Top" Width="792" IsSynchronizedWithCurrentItem="True">
            <TabItem Header="Customers">
                <Grid Background="#FFB795CB" DataContext="{StaticResource customerViewSource}" Margin="0,-2,0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="103*"/>
                        <ColumnDefinition Width="683*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="90,22,193,227" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1" >
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" Margin="190,229,297,0" VerticalAlignment="Top" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,1,0,5" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3,3,0,5" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,0,0,6" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3,3,0,6" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,0,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3,0,0,6" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNewC" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="35,22,0,0" Height="49" Background="#FFD3C674" Grid.ColumnSpan="2" Click="btnNewC_Click"/>
                    <Button x:Name="btnEditC" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="35,113,0,0" Height="49" Background="#FFD3C674" Grid.ColumnSpan="2" Click="btnEditC_Click"/>
                    <Button x:Name="btnDeleteC" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="35,302,0,0" Height="49" Background="#FFD3C674" Grid.ColumnSpan="2" Click="btnDeleteC_Click"/>
                    <Button x:Name="btnSaveC" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="545,22,0,0" Height="49" Background="#FFD3C674" Grid.Column="1" Click="btnSaveC_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false"/>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancelC" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="545,302,0,0" Height="49" Background="#FFD3C674" Grid.Column="1" Click="btnCancelC_Click"/>
                    <Button x:Name="btnPrevC" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="90,167,0,0" Height="49" Background="#FFD3C674" Grid.Column="1" Click="btnPrevC_Click"/>
                    <Button x:Name="btnNextC" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="391,167,0,0" Height="49" Background="#FFD3C674" Grid.Column="1" Click="btnNextC_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Products" Height="22" VerticalAlignment="Top">
                <Grid Background="#FFB795CB" DataContext="{StaticResource productViewSource}" Margin="0,-2,0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0*"/>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="39*"/>
                        <ColumnDefinition Width="732*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="productDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="139,22,193,227" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="desertIdColumn" Binding="{Binding DesertId}" Header="Desert Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="typeColumn" Binding="{Binding Type}" Header="Type" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="flavorColumn" Binding="{Binding Flavor}" Header="Flavor" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" Grid.Column="3" HorizontalAlignment="Left" Margin="242,257,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Desert Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="desertIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CakeId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Flavor:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,2,0,4" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="flavorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="22" Margin="3,6,0,4" Grid.Row="2" Text="{Binding Flavor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Type:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,2,0,2" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="typeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3,5,0,2" Grid.Row="1" Text="{Binding Type, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNewP" Grid.ColumnSpan="2" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="19.5,22,0,0" Width="99" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnNewP_Click"/>
                    <Button x:Name="btnEditP" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="99" Margin="19.5,112,0,0" Grid.ColumnSpan="2" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnEditP_Click"/>
                    <Button x:Name="btnDeleteP" Grid.ColumnSpan="2" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Margin="19.5,302,0,0" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnDeleteP_Click"/>
                    <Button x:Name="btnSaveP" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Margin="594,22,0,0" Grid.Column="3" Height="49" Background="#FFD3C674" Click="btnSaveP_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=typeTextBox, Path=(Validation.HasError)}" Value="false"/>
                                            <Condition Binding="{Binding ElementName=flavorTextBox, Path=(Validation.HasError)}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancelP" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Grid.Column="3" Margin="594,302,0,0" Height="49" Background="#FFD3C674" Click="btnCancelP_Click"/>
                    <Button x:Name="btnPrevP" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Grid.Column="3" Margin="139,166,0,0" Height="49" Background="#FFD3C674" Click="btnPrevP_Click"/>
                    <Button x:Name="btnNextP" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Grid.Column="3" Margin="439,166,0,0" Height="49" Background="#FFD3C674" Click="btnNextP_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFB795CB" Margin="0,-2,0,3" DataContext="{StaticResource customerOrdersViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="389*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbCustomer" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Grid.Column="2" Margin="185,85,0,0" Height="22">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label x:Name="lblComboBoxCustomers" Content="Customers" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="185,45,0,0" Grid.Column="2"/>
                    <ComboBox x:Name="cmbProduct" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="465,85,0,0" Grid.Column="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Type"/>
                                            <Binding Path="Flavor"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label x:Name="lblComboBoxProducts" Content="Products" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="465,45,0,0" Grid.Column="2"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="185,166,193,83" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="2" IsSynchronizedWithCurrentItem="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="TypeColumn" Binding="{Binding Type}" Header="Type" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="FlavorColumn" Binding="{Binding Flavor}" Header="Flavor" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNewO" Content="New" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Height="49" Margin="35,22,0,0" Background="#FFD3C674" Grid.Column="2" Click="btnNewO_Click"/>
                    <Button x:Name="btnEditO" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Margin="35,85,0,0" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnEditO_Click"/>
                    <Button x:Name="btnDeleteO" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Margin="35,166,0,0" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnDeleteO_Click"/>
                    <Button x:Name="btnSaveO" Content="Save" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Margin="35,256,0,0" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnSaveO_Click"/>
                    <Button x:Name="btnCancelO" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Margin="650,256,0,0" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnCancelO_Click"/>
                    <Button x:Name="btnPrevO" Content="Previous" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Margin="185,310,0,0" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnPrevO_Click"/>
                    <Button x:Name="btnNextO" Content="Next" HorizontalAlignment="Left" VerticalAlignment="Top" Width="98" Margin="487,310,0,0" Height="49" Background="#FFD3C674" Grid.Column="2" Click="btnNextO_Click"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
